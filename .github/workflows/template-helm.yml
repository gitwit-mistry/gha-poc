name: Reusable workflow template for IMS Helm CI
on:
  workflow_call:
    inputs:
     component:
        description: IMS Component
        required: true
        type: string
     existing_tag:
        description: Existing Tag
        type: string
     mybool:
       type: boolean
       default: true

      
defaults:
  run:
    shell: bash

jobs:
  helm-ci:
    runs-on: ubuntu-latest
    env:
      COMPONENT: ${{ inputs.component }}
      EXISTING_TAG: ${{ inputs.existing_tag }}
    steps:
#       - name: Set env NEED
#         run: |
#           if [[ ${EXISTING_TAG} != "" ]]; then
#               echo "ONDEMAND=true" >> "$GITHUB_ENV"
#           else
#               echo "ONDEMAND=false" >> "$GITHUB_ENV"
#           fi
      - name: test
        run: |
          echo "${{inputs.existing_tag}}"
      - uses: actions/checkout@v3
        name: p
        id: p
#         if: ${{inputs.existing_tag == "true"}}  
      - uses: actions/checkout@v3
        name: q
        id: q
#         if: ${{inputs.existing_tag != "true"}}  
        with:
          ref: ${{env.EXISTING_TAG}}
      - name: set env
        run: |
          env | sort
          echo "this is the tag: ${EXISTING_TAG}"
          # For push tag event, collect tag info
          if [[ ${GITHUB_EVENT_NAME} == 'push' ]] && [[ ${GITHUB_REF} =~ ^refs/tags/.*$ ]]; then
            echo "dont run s1"
            export TAG=${GITHUB_REF##refs/*/}
            echo "--> GITHUB_REF[${GITHUB_REF}] TAG[${TAG}][${TAG##v}]"
            # For '1.develop-*' tags, upload the chart to the 'develop' artifactory repo
            if [[ ${TAG} =~ ^1.develop-.*$ ]]; then
              # TODO: Remove 'gha' string from TAG later
              echo "--> develop TAG[${TAG}]"
              {
                echo "TYPE=develop"
                echo "VERSION_LABEL=2.0.0-${TAG##v}-gha"
                echo "TARGET_REPO=ims-develop-incimgmtsvc-helm"
              } >> ${GITHUB_ENV}
            elif [[ ${TAG} =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
              echo "--> release TAG[${TAG}]"
              # For 'N.N.N*' tags, upload the chart to the 'release' artifactory repo
              {
                echo "TYPE=release"
                echo "VERSION_LABEL=${TAG##v}-gha"
                echo "TARGET_REPO=ims-release-incimgmtsvc-helm"
              } >> ${GITHUB_ENV}
            else
              echo "Unknown tag [${TAG}]"
              exit 1
            fi
          elif [[ ${EXISTING_TAG} != "" ]]; then 
            export TAG=${EXISTING_TAG}
            echo "--> TAG[${TAG}][${TAG##v}]"
            echo "This is the if condition running"
            # For '1.develop-*' tags, upload the chart to the 'develop' artifactory repo
            if [[ ${TAG} =~ ^1.develop-.*$ ]]; then
              # TODO: Remove 'gha' string from TAG later
              echo "--> develop TAG[${TAG}]"
              {
                echo "TYPE=develop"
                echo "VERSION_LABEL=2.0.0-${TAG##v}-gha"
                echo "TARGET_REPO=ims-develop-incimgmtsvc-helm"
              } >> ${GITHUB_ENV}
            elif [[ ${TAG} =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
              echo "--> release TAG[${TAG}]"
              # For 'N.N.N*' tags, upload the chart to the 'release' artifactory repo
              {
                echo "TYPE=release"
                echo "VERSION_LABEL=${TAG##v}-gha"
                echo "TARGET_REPO=ims-release-incimgmtsvc-helm"
              } >> ${GITHUB_ENV}
            else
              echo "Unknown tag [${TAG}]"
              exit 1
            fi
          elif [[ ${GITHUB_EVENT_NAME} == 'pull_request' ]]; then
            echo "dont run s2"
            echo "--> Process PR event [${GITHUB_REF}]"
            echo "VERSION_LABEL=0.0.1-dev.gha.build-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}
          else
            echo "Error: Invalid event [${GITHUB_EVENT_NAME}]"
          fi

          echo "COMPONENT_BASE_DIR=mgmtplane/apiconnector/helm-chart/${COMPONENT}" >> ${GITHUB_ENV}

          echo "--> GITHUB_ENV" 
          cat "${GITHUB_ENV}" 

     
